name: CI
on:
  workflow_dispatch:
  schedule:
    - cron: "0 16 * * *"

jobs:
  check:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Should build?
        id: should_build
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! git checkout origin/update build.md; then
            echo "first time building!"
            echo "SHOULD_BUILD=1" >> "$GITHUB_OUTPUT"
          else
            UPDATE_CFG=$(./build.sh config.toml --config-update)
            if [ "$UPDATE_CFG" ]; then
              echo "'$UPDATE_CFG'"
              echo "SHOULD_BUILD=1" >> "$GITHUB_OUTPUT"
            else
              echo "SHOULD_BUILD=0" >> "$GITHUB_OUTPUT"
            fi
          fi

      # NEW: Only allow build if latest revanced-patches release mentions "YouTube" (not "YouTube Music")
      - name: Did revanced-patches change YouTube?
        id: yt_changed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          # Prefer gh if available; otherwise fall back to curl+jq
          if command -v gh >/dev/null 2>&1; then
            body="$(gh release view --repo ReVanced/revanced-patches --json body -q .body || true)"
          else
            body="$(curl -fsSL -H "Accept: application/vnd.github+json" \
                           -H "Authorization: Bearer $GH_TOKEN" \
                           https://api.github.com/repos/ReVanced/revanced-patches/releases/latest \
                     | jq -r '.body // ""')"
          fi

          # Flag if "YouTube" is mentioned, but exclude "YouTube Music"
          if printf '%s\n' "$body" | grep -Eiq '(^|[[:space:]])YouTube([[:space:]]|:|-|–)'; then
            if ! printf '%s\n' "$body" | grep -Eiq '(^|[[:space:]])YouTube[[:space:]]Music([[:space:]]|:|-|–)'; then
              echo "YT_CHANGED=1" >> "$GITHUB_OUTPUT"
              exit 0
            fi
          fi
          echo "YT_CHANGED=0" >> "$GITHUB_OUTPUT"

      - name: Clear older runs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+10 | xargs -IID gh api "repos/$GITHUB_REPOSITORY/actions/runs/ID" -X DELETE || :

    outputs:
      SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}
      YT_CHANGED:   ${{ steps.yt_changed.outputs.YT_CHANGED }}

  build:
    permissions: write-all
    needs: check
    uses: ./.github/workflows/build.yml
    if: ${{ needs.check.outputs.SHOULD_BUILD == 1 && needs.check.outputs.YT_CHANGED == 1 }}
    secrets: inherit
